#!/bin/sh
#
# upcsub -n np exe args

if [ $# -lt 2 ]; then
  echo "Usage: upcsub [-n procs] [-a] [-f script] exe args"
  echo "  -n -- determines number of processes to launch"
  echo "  -a -- use whole cluster (vs just instructional nodes)"
  echo "  -t -- use TAU to profile"
  echo "  -f -- specify additional HTCondor features"
  exit 0
fi

done_parsing=false
while [ $done_parsing = "false" ]
do
done_parsing=true

if [ "$1" = "-n" ]; then
  shift
  NP=$1
  shift
  done_parsing=false
fi

if [ "$1" = "-a" ]; then
  shift
  hasa=true
  done_parsing=false
fi

if [ "$1" = "-t" ]; then
  shift
  hast="tau_exec $1"
  shift
  export TAU_VERBOSE=1
  export PROFILEDIR="."
  done_parsing=false
fi

if [ "$1" = "-f" ]; then
  shift
  hasf=$1
  shift
  done_parsing=false
fi

done

# Sanity check that nprocs specified
if [ -z $NP ]; then
  echo "Must specify processor count"
  exit 1
fi 

# Add explicit path to executables
if EXE=`which $1` ; then
  EXE=`readlink -f $EXE`
else
  echo "Cannot find $EXE"
  exit 0
fi
shift

SUBFILE=upcsub-$$.sub

cat <<EOF > $SUBFILE
# HTCondor script generated by upcsub
universe = parallel
executable = /share/cs-instructional/cs5220/script/upcscript
getenv = true
arguments = `pwd` $hast $EXE $@
#should_transfer_files = yes
#when_to_transfer_output = on_exit_or_evict
output = upcsub-$$-o.\$(NODE)
error  = upcsub-$$-e.\$(NODE)
log    = upcsub-$$-l
notification = never
machine_count = $NP
EOF

if [ -z "$hasa" ]; then
  echo 'requirements = C4_GROUP == "cs"' >> $SUBFILE
fi

if [ "$hasf" ]; then
  cat $hasf >> $SUBFILE
fi

echo "queue" >> $SUBFILE

condor_submit $SUBFILE
